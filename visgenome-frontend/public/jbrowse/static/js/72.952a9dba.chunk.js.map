{"version":3,"sources":["../../../plugins/wiggle/src/LinearWiggleDisplay/components/SetColorDialog.tsx"],"names":["useStyles","makeStyles","theme","root","closeButton","position","right","spacing","top","color","palette","grey","SetColorDialog","props","classes","model","handleClose","open","onClose","aria-labelledby","aria-describedby","id","aria-label","className","onClick","style","overflowX","onChange","event","setColor","Object","r","g","b","a","serializeColor","rgb","margin","undefined","variant","type"],"mappings":"sHAAA,yJAYMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GACNC,YAAa,CACXC,SAAU,WACVC,MAAOJ,EAAMK,QAAQ,GACrBC,IAAKN,EAAMK,QAAQ,GACnBE,MAAOP,EAAMQ,QAAQC,KAAK,UAcf,SAASC,EAAeC,GAOrC,IAAMC,EAAUd,IACRe,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,YAEf,OACE,kBAAC,IAAD,CACEC,MAAI,EACJC,QAASF,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAC,IAAD,CAAaC,GAAG,sBAAhB,iBAEE,kBAAC,IAAD,CACEC,aAAW,QACXC,UAAWT,EAAQV,YACnBoB,QAASR,GAET,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAeS,MAAO,CAAEC,UAAW,WACjC,yBAAKH,UAAWT,EAAQX,MACtB,kBAAC,IAAD,CACEwB,SAAU,SAAAC,GACRb,EAAMc,SAvCpB,SAAwBpB,GACtB,GAAIA,aAAiBqB,OAAQ,OACJrB,EAAfsB,EADmB,EACnBA,EAAGC,EADgB,EAChBA,EAAGC,EADa,EACbA,EAAGC,EADU,EACVA,EACjB,oBAAcH,EAAd,YAAmBC,EAAnB,YAAwBC,EAAxB,YAA6BC,EAA7B,KAEF,OAAOzB,EAkCoB0B,CAAeP,EAAMQ,SAGxC,6BACA,yBAAKX,MAAO,CAAEY,OAAQ,KACpB,kBAAC,IAAD,CACEb,QAAS,WACPT,EAAMc,cAASS,IAEjB7B,MAAM,YACN8B,QAAQ,aALV,+BASA,kBAAC,IAAD,CACEA,QAAQ,YACR9B,MAAM,UACN+B,KAAK,SACLhB,QAAS,WACPR,MALJ","file":"static/js/72.952a9dba.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Button,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { CompactPicker, Color, RGBColor } from 'react-color'\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return `rgb(${r},${g},${b},${a})`\n  }\n  return color\n}\n\nexport default function SetColorDialog(props: {\n  model: {\n    color: number\n    setColor: Function\n  }\n  handleClose: () => void\n}) {\n  const classes = useStyles()\n  const { model, handleClose } = props\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Select a color\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </DialogTitle>\n      <DialogContent style={{ overflowX: 'hidden' }}>\n        <div className={classes.root}>\n          <CompactPicker\n            onChange={event => {\n              model.setColor(serializeColor(event.rgb))\n            }}\n          />\n          <br />\n          <div style={{ margin: 20 }}>\n            <Button\n              onClick={() => {\n                model.setColor(undefined)\n              }}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Restore default from config\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => {\n                handleClose()\n              }}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"sourceRoot":""}