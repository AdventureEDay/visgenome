{"version":3,"sources":["../../../plugins/config/src/ConfigurationEditorWidget/components/CallbackEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ColorEditor.tsx","../../../plugins/config/src/ConfigurationEditorWidget/components/SlotEditor.js","../../../plugins/config/src/ConfigurationEditorWidget/components/TypeSelector.js","../../../plugins/config/src/ConfigurationEditorWidget/components/ConfigurationEditor.js","../../../node_modules/pluralize/pluralize.js"],"names":["useStyles","makeStyles","theme","callbackEditor","marginTop","borderBottom","fontFamily","fontSize","observer","slot","classes","useState","code","setCode","error","setCodeError","debouncedCode","useDebounce","useEffect","jexlDebouncedCode","stringToJexlExpression","getEnv","e","shrink","htmlFor","className","value","onValueChange","newCode","highlight","padding","style","background","undefined","title","arrow","color","onClick","newWindow","window","popover","position","zIndex","cover","top","right","bottom","left","ColorPicker","props","onChange","displayColorPicker","setDisplayColorPicker","role","ColorSlot","label","TextFieldProps","displayed","setDisplayed","TextField","InputProps","borderRightWidth","borderRightStyle","borderRightColor","event","target","Object","r","g","b","a","serializeColor","rgb","defaultProps","name","set","helperText","description","fullWidth","StringEditor","evt","TextEditor","multiline","SvgCheckbox","d","StringArrayEditor","setValue","disablePadding","key","disableGutters","endAdornment","placeholder","disabled","data-testid","useMapEditorStyles","card","StringArrayMapEditor","Array","val","raised","action","setAtIndex","removeAtIndex","idx","add","strValue","disableTypography","NumberMapEditor","numValue","NumberEditor","setVal","num","parseFloat","Number","type","IntegerEditor","parseInt","booleanEditor","control","checked","stringEnumEditor","slotSchema","p","getPropertyMembers","getSubType","choices","getUnionSubTypes","getPropertyType","t","select","str","FileSelectorWrapper","location","setLocation","valueComponents","string","text","fileLocation","stringArray","stringArrayMap","numberMap","number","integer","stringEnum","boolean","frozen","configRelationships","JsonEditor","useSlotEditorStyles","paper","display","marginBottom","overflow","paperContent","flex","slotModeSwitch","width","justifyContent","alignItems","ValueComponent","console","typeNameChoices","slotName","subSchemaContainer","marginLeft","borderLeft","paddingLeft","root","overflowX","Member","schema","isConfigurationSchemaType","singular","slotIndex","getTypeNamesFromExplicitlyTypedUnion","typeSelector","isConfigurationSlotType","Schema","iterMap","getMembers","ConfigurationEditor","model","readConfObject","module","exports","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","RegExp","restoreCase","word","token","toLowerCase","toUpperCase","charAt","substr","interpolate","args","replace","match","index","result","arguments","sanitizeWord","rules","length","hasOwnProperty","len","test","replaceWord","replaceMap","keepMap","checkWord","bool","pluralize","count","inclusive","plural","isPlural","isSingular","addPluralRule","replacement","push","addSingularRule","addUncountableRule","addIrregularRule","single","forEach"],"mappings":"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,KACT,CAAC,qBAAsB,MACvB,CAAC,kBAAmB,MACpB,CAAC,gBAAiB,QAClB,CAAC,qCAAsC,QACvC,CAAC,eAAgB,OACjB,CAAC,yCAA0C,MAC3C,CAAC,4FAA6F,OAC9F,CAAC,gCAAiC,QAClC,CAAC,2BAA4B,QAC7B,CAAC,iBAAkB,SACnB,CAAC,wHAAyH,OAC1H,CAAC,qGAAsG,OACvG,CAAC,QAAS,OACV,CAAC,2CAA4C,WAC7C,CAAC,oBAAqB,SACtB,CAAC,uBAAwB,SACzB,CAAC,oBAAqB,QACtB,CAAC,gDAAiD,UAClD,CAAC,gCAAiC,SAClC,CAAC,sBAAuB,UACxB,CAAC,oBAAqB,SACtB,CAAC,SAAU,MACX,CAAC,WAAY,OACb,CAAC,OAAQ,QACTwC,SAAQ,SAAUxC,GAClB,OAAO2B,EAAUM,cAAcjC,EAAK,GAAIA,EAAK,OAM/C,CACE,CAAC,MAAO,IACR,CAAC,SAAU,MACX,CAAC,gEAAiE,QAClE,CAAC,kCAAmC,OACpC,CAAC,QAAS,KACV,CAAC,uFAAwF,QACzF,CAAC,oBAAqB,QACtB,CAAC,uBAAwB,UACzB,CAAC,sBAAuB,MACxB,CAAC,2FAA4F,MAC7F,CAAC,qEAAsE,SACvE,CAAC,iCAAkC,MACnC,CAAC,oBAAqB,QACtB,CAAC,4FAA6F,QAC9F,CAAC,yGAA0G,QAC3G,CAAC,8FAA+F,QAChG,CAAC,0BAA2B,OAC5B,CAAC,+BAAgC,QACjC,CAAC,sBAAuB,QACxB,CAAC,oBAAqB,UACtB,CAAC,eAAgB,MACjB,CAAC,YAAa,MACd,CAAC,QAAS,QACVwC,SAAQ,SAAUxC,GAClB,OAAO2B,EAAUS,gBAAgBpC,EAAK,GAAIA,EAAK,OAMjD,CAEE,YACA,SACA,SACA,MACA,WACA,UACA,OACA,YACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,WACA,MACA,UACA,UACA,WACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,YACA,OACA,WACA,SACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,iBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MACA,kBAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACAwC,QAAQb,EAAUU,oBAEbV,EA/eYA","file":"static/js/34.ddc42d81.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDebounce } from '@jbrowse/core/util'\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport { getEnv } from 'mobx-state-tree'\nimport { observer, PropTypes } from 'mobx-react'\nimport Editor from 'react-simple-code-editor'\n\n// fontSize and fontFamily have to match between Editor and SyntaxHighlighter\nconst fontSize = '12px'\n\n// Optimize by using system default fonts:\n// https://css-tricks.com/snippets/css/font-stacks/\nconst fontFamily =\n  'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace'\n\nconst useStyles = makeStyles(theme => ({\n  callbackEditor: {\n    marginTop: '16px',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    fontFamily,\n    fontSize,\n  },\n}))\n\nfunction CallbackEditor({ slot }) {\n  const classes = useStyles()\n\n  const [code, setCode] = useState(slot.value)\n  const [error, setCodeError] = useState()\n  const debouncedCode = useDebounce(code, 400)\n\n  useEffect(() => {\n    try {\n      const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n        ? debouncedCode\n        : `jexl:${debouncedCode}`\n      stringToJexlExpression(\n        jexlDebouncedCode,\n        getEnv(slot).pluginManager?.jexl,\n      )\n      slot.set(jexlDebouncedCode) // slot.set `jexl:${debouncedCode}`\n      setCodeError(null)\n    } catch (e) {\n      setCodeError(e)\n    }\n  }, [debouncedCode, slot])\n\n  // if default value is a callback, will have to remove jexl:\n  // do this last\n  return (\n    <>\n      <FormControl>\n        <InputLabel shrink htmlFor=\"callback-editor\">\n          {slot.name}\n        </InputLabel>\n        <Editor\n          className={classes.callbackEditor}\n          value={code.startsWith('jexl:') ? code.split('jexl:')[1] : code}\n          onValueChange={newCode => {\n            setCode(newCode)\n          }}\n          highlight={newCode => newCode}\n          padding={10}\n          style={{ background: error ? '#fdd' : undefined }}\n        />\n        <FormHelperText>{slot.description}</FormHelperText>\n      </FormControl>\n      <Tooltip\n        title={\n          <div>\n            Callbacks are written in Jexl format. Click to learn more.\n            <br /> Names of available context items: {slot.contextVariable}\n          </div>\n        }\n        arrow\n      >\n        <IconButton\n          color=\"primary\"\n          onClick={() => {\n            const newWindow = window.open(\n              'https://github.com/TomFrost/Jexl',\n              '_blank',\n              'noopener,noreferrer',\n            )\n            if (newWindow) {\n              newWindow.opener = null\n            }\n          }}\n        >\n          <HelpIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\nCallbackEditor.propTypes = {\n  slot: PropTypes.objectOrObservableObject.isRequired,\n}\nexport default observer(CallbackEditor)\n","import { observer } from 'mobx-react'\nimport ReactPropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ChromePicker, Color, ColorResult, RGBColor } from 'react-color'\nimport React, { useState } from 'react'\n\n// this is needed because passing a entire color object into the react-color\n// for alpha, can't pass in an rgba string for example\nfunction serializeColor(color: Color) {\n  if (color instanceof Object) {\n    const { r, g, b, a } = color as RGBColor\n    return `rgb(${r},${g},${b},${a})`\n  }\n  return color\n}\nconst useStyles = makeStyles({\n  popover: {\n    position: 'absolute',\n    zIndex: 2,\n  },\n  cover: {\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n})\n\nexport function ColorPicker(props: {\n  color: Color\n  onChange: (color: ColorResult) => void\n}) {\n  const { color, onChange } = props\n  const classes = useStyles()\n  const [displayColorPicker, setDisplayColorPicker] = useState(true)\n\n  const handleClose = () => {\n    setDisplayColorPicker(false)\n  }\n  return (\n    <div>\n      {displayColorPicker ? (\n        <div className={classes.popover}>\n          <div\n            role=\"presentation\"\n            className={classes.cover}\n            onClick={handleClose}\n          />\n          <ChromePicker color={color} onChange={onChange} />\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nColorPicker.propTypes = {\n  color: ReactPropTypes.string.isRequired,\n  onChange: ReactPropTypes.func.isRequired,\n}\n\nexport const ColorSlot = (props: {\n  value: string\n  label: string\n  TextFieldProps: {\n    helperText: string\n    fullWidth: boolean\n  }\n  onChange: (arg: string) => void\n}) => {\n  const { value, label, TextFieldProps, onChange } = props\n  const [displayed, setDisplayed] = useState(false)\n\n  return (\n    <>\n      <TextField\n        value={value}\n        label={label}\n        InputProps={{\n          style: {\n            color: value,\n            borderRightWidth: '25px',\n            borderRightStyle: 'solid',\n            borderRightColor: value,\n          },\n        }}\n        onClick={() => setDisplayed(!displayed)}\n        onChange={event => {\n          onChange(event.target.value)\n        }}\n        {...TextFieldProps}\n      />\n      {displayed ? (\n        <ColorPicker\n          color={value}\n          onChange={(event: ColorResult) => {\n            onChange(serializeColor(event.rgb))\n          }}\n        />\n      ) : null}\n    </>\n  )\n}\nColorSlot.propTypes = {\n  onChange: ReactPropTypes.func.isRequired,\n  label: ReactPropTypes.string,\n  TextFieldProps: ReactPropTypes.shape({}),\n  value: ReactPropTypes.string,\n}\nColorSlot.defaultProps = {\n  label: '',\n  value: '#000',\n  TextFieldProps: {},\n}\n\nfunction ColorEditorSlot(props: {\n  slot: {\n    name: string\n    value: string\n    description: string\n    set: (arg: string) => void\n  }\n}) {\n  const { slot } = props\n  return (\n    <ColorSlot\n      label={slot.name}\n      value={slot.value}\n      onChange={(color: string) => {\n        slot.set(color)\n      }}\n      TextFieldProps={{\n        helperText: slot.description,\n        fullWidth: true,\n      }}\n    />\n  )\n}\nColorEditorSlot.propTypes = {\n  slot: ReactPropTypes.shape({\n    name: ReactPropTypes.string.isRequired,\n    description: ReactPropTypes.string,\n    value: ReactPropTypes.string.isRequired,\n    set: ReactPropTypes.func.isRequired,\n  }).isRequired,\n}\nexport default observer(ColorEditorSlot)\n","import { FileSelector } from '@jbrowse/core/ui'\nimport {\n  getPropertyType,\n  getSubType,\n  getUnionSubTypes,\n} from '@jbrowse/core/util/mst-reflection'\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  MenuItem,\n  Paper,\n  SvgIcon,\n  TextField,\n  makeStyles,\n} from '@material-ui/core'\n\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked'\nimport { observer } from 'mobx-react'\nimport { getPropertyMembers } from 'mobx-state-tree'\nimport React, { useEffect, useState } from 'react'\nimport CallbackEditor from './CallbackEditor'\nimport ColorEditor from './ColorEditor'\nimport JsonEditor from './JsonEditor'\n\nconst StringEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    // error={filterError}\n    helperText={slot.description}\n    fullWidth\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\nconst TextEditor = observer(({ slot }) => (\n  <TextField\n    label={slot.name}\n    helperText={slot.description}\n    fullWidth\n    multiline\n    value={slot.value}\n    onChange={evt => slot.set(evt.target.value)}\n  />\n))\n\n// checked checkbox, looks like a styled (x)\nconst SvgCheckbox = () => (\n  <SvgIcon>\n    <path d=\"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" />\n  </SvgIcon>\n)\n\nconst StringArrayEditor = observer(({ slot }) => {\n  const [value, setValue] = useState('')\n  return (\n    <>\n      {slot.name ? <InputLabel>{slot.name}</InputLabel> : null}\n      <List disablePadding>\n        {slot.value.map((val, idx) => (\n          <ListItem key={idx} disableGutters>\n            <TextField\n              value={val}\n              onChange={evt => slot.setAtIndex(idx, evt.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={() => slot.removeAtIndex(idx)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </ListItem>\n        ))}\n        <ListItem disableGutters>\n          <TextField\n            value={value}\n            placeholder=\"add new\"\n            onChange={event => setValue(event.target.value)}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment>\n                  <IconButton\n                    onClick={() => {\n                      slot.add(value)\n                      setValue('')\n                    }}\n                    disabled={value === ''}\n                    color=\"secondary\"\n                    data-testid={`stringArrayAdd-${slot.name}`}\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </ListItem>\n      </List>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst useMapEditorStyles = makeStyles(theme => ({\n  card: {\n    marginTop: theme.spacing(1),\n  },\n}))\n\nconst StringArrayMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <StringArrayEditor\n              slot={{\n                value: val,\n                description: `Values associated with entry ${key}`,\n                setAtIndex: (idx, strValue) => {\n                  slot.setAtKeyIndex(key, idx, strValue)\n                },\n                removeAtIndex: idx => {\n                  slot.removeAtKeyIndex(key, idx)\n                },\n                add: strValue => {\n                  slot.addToKey(key, strValue)\n                },\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, [])\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberMapEditor = observer(({ slot }) => {\n  const classes = useMapEditorStyles()\n  const [value, setValue] = useState('')\n  return (\n    <>\n      <InputLabel>{slot.name}</InputLabel>\n      {Array.from(slot.value, ([key, val]) => (\n        <Card raised key={key} className={classes.card}>\n          <CardHeader\n            title={key}\n            action={\n              <IconButton color=\"secondary\" onClick={() => slot.remove(key)}>\n                <DeleteIcon />\n              </IconButton>\n            }\n          />\n          <CardContent>\n            <NumberEditor\n              slot={{\n                value: val,\n                set: numValue => slot.add(key, numValue),\n              }}\n            />\n          </CardContent>\n        </Card>\n      ))}\n      <Card raised className={classes.card}>\n        <CardHeader\n          disableTypography\n          title={\n            <TextField\n              fullWidth\n              value={value}\n              placeholder=\"add new\"\n              onChange={event => setValue(event.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton\n                      disabled={value === ''}\n                      onClick={() => {\n                        slot.add(value, 0)\n                        setValue('')\n                      }}\n                      color=\"secondary\"\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          }\n        />\n      </Card>\n      <FormHelperText>{slot.description}</FormHelperText>\n    </>\n  )\n})\n\nconst NumberEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseFloat(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    } else {\n      slot.reset()\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst IntegerEditor = observer(({ slot }) => {\n  const [val, setVal] = useState(slot.value)\n  useEffect(() => {\n    const num = parseInt(val, 10)\n    if (!Number.isNaN(num)) {\n      slot.set(num)\n    }\n  }, [slot, val])\n  return (\n    <TextField\n      label={slot.name}\n      helperText={slot.description}\n      value={val}\n      type=\"number\"\n      onChange={evt => setVal(evt.target.value)}\n    />\n  )\n})\n\nconst booleanEditor = observer(({ slot }) => (\n  <FormControl>\n    <FormControlLabel\n      label={slot.name}\n      control={\n        <Checkbox\n          checked={slot.value}\n          onChange={evt => slot.set(evt.target.checked)}\n        />\n      }\n    />\n    <FormHelperText>{slot.description}</FormHelperText>\n  </FormControl>\n))\n\nconst stringEnumEditor = observer(({ slot, slotSchema }) => {\n  const p = getPropertyMembers(getSubType(slotSchema))\n  const choices = getUnionSubTypes(\n    getUnionSubTypes(getSubType(getPropertyType(p, 'value')))[1],\n  ).map(t => t.value)\n\n  return (\n    <TextField\n      value={slot.value}\n      label={slot.name}\n      select\n      // error={filterError}\n      helperText={slot.description}\n      fullWidth\n      onChange={evt => slot.set(evt.target.value)}\n    >\n      {choices.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst FileSelectorWrapper = observer(({ slot }) => {\n  return (\n    <FileSelector\n      location={slot.value}\n      setLocation={location => slot.set(location)}\n      name={slot.name}\n      description={slot.description}\n    />\n  )\n})\n\nconst valueComponents = {\n  string: StringEditor,\n  text: TextEditor,\n  fileLocation: FileSelectorWrapper,\n  stringArray: StringArrayEditor,\n  stringArrayMap: StringArrayMapEditor,\n  numberMap: NumberMapEditor,\n  number: NumberEditor,\n  integer: IntegerEditor,\n  color: ColorEditor,\n  stringEnum: stringEnumEditor,\n  boolean: booleanEditor,\n  frozen: JsonEditor,\n  configRelationships: JsonEditor,\n}\n\nexport const useSlotEditorStyles = makeStyles(theme => ({\n  paper: {\n    display: 'flex',\n    marginBottom: theme.spacing(2),\n    position: 'relative',\n    overflow: 'visible',\n  },\n  paperContent: {\n    flex: 'auto',\n    padding: theme.spacing(1),\n    overflow: 'auto',\n  },\n  slotModeSwitch: {\n    width: 24,\n    background: theme.palette.secondary.light,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}))\n\nconst SlotEditor = observer(({ slot, slotSchema }) => {\n  const classes = useSlotEditorStyles()\n  const { type } = slot\n  let ValueComponent = slot.isCallback ? CallbackEditor : valueComponents[type]\n  if (!ValueComponent) {\n    console.warn(`no slot editor defined for ${type}, editing as string`)\n    ValueComponent = StringEditor\n  }\n  if (!(type in valueComponents)) {\n    console.warn(`SlotEditor needs to implement ${type}`)\n  }\n  return (\n    <Paper className={classes.paper}>\n      <div className={classes.paperContent}>\n        <ValueComponent slot={slot} slotSchema={slotSchema} />\n      </div>\n      <div className={classes.slotModeSwitch}>\n        {slot.contextVariable.length ? (\n          <IconButton\n            className={classes.slotModeIcon}\n            onClick={() =>\n              slot.isCallback ? slot.convertToValue() : slot.convertToCallback()\n            }\n            title={`convert to ${\n              slot.isCallback ? 'regular value' : 'callback'\n            }`}\n            color=\"secondary\"\n          >\n            {!slot.isCallback ? <RadioButtonUncheckedIcon /> : <SvgCheckbox />}\n          </IconButton>\n        ) : null}\n      </div>\n    </Paper>\n  )\n})\n\nexport default SlotEditor\n","import MenuItem from '@material-ui/core/MenuItem'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport { observer } from 'mobx-react'\nimport React from 'react'\nimport { useSlotEditorStyles } from './SlotEditor'\n\nconst TypeSelector = observer(\n  ({ typeNameChoices, slot, slotName, onChange }) => {\n    const classes = useSlotEditorStyles()\n    return (\n      <Paper className={classes.paper}>\n        <div className={classes.paperContent}>\n          <TextField\n            value={slot.type}\n            label=\"Type\"\n            select\n            // error={filterError}\n            helperText={`Type of ${slotName} to use`}\n            fullWidth\n            onChange={onChange}\n          >\n            {typeNameChoices.map(str => (\n              <MenuItem key={str} value={str}>\n                {str}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n      </Paper>\n    )\n  },\n)\n\nexport default TypeSelector\n","import {\n  readConfObject,\n  getTypeNamesFromExplicitlyTypedUnion,\n  isConfigurationSchemaType,\n  isConfigurationSlotType,\n} from '@jbrowse/core/configuration'\n\nimport { iterMap } from '@jbrowse/core/util'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { observer } from 'mobx-react'\nimport { getMembers } from 'mobx-state-tree'\nimport { singular } from 'pluralize'\nimport React from 'react'\nimport SlotEditor from './SlotEditor'\nimport TypeSelector from './TypeSelector'\n\nconst useStyles = makeStyles(theme => ({\n  subSchemaContainer: {\n    marginLeft: theme.spacing(1),\n    borderLeft: `1px solid ${theme.palette.secondary.main}`,\n    paddingLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  root: {\n    padding: theme.spacing(1, 3, 1, 1),\n    background: theme.palette.background.default,\n    overflowX: 'hidden',\n  },\n}))\n\nconst Member = observer(props => {\n  const classes = useStyles()\n  const { slotName, slotSchema, schema, slot = schema[slotName] } = props\n  let typeSelector\n  if (isConfigurationSchemaType(slotSchema)) {\n    if (slot.length) {\n      return (\n        <>\n          {slot.map((subslot, slotIndex) => {\n            const key = `${singular(slotName)} ${slotIndex + 1}`\n            return <Member {...props} key={key} slot={subslot} slotName={key} />\n          })}\n        </>\n      )\n    }\n    // if this is an explicitly typed schema, make a type-selecting dropdown\n    // that can be used to change its type\n    const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema)\n    if (typeNameChoices.length) {\n      typeSelector = (\n        <TypeSelector\n          typeNameChoices={typeNameChoices}\n          slotName={slotName}\n          slot={slot}\n          onChange={evt => {\n            if (evt.target.value !== slot.type) {\n              schema.setSubschema(slotName, { type: evt.target.value })\n            }\n          }}\n        />\n      )\n    }\n    return (\n      <>\n        <FormLabel>{slotName}</FormLabel>\n        <div className={classes.subSchemaContainer}>\n          {typeSelector}\n          <FormGroup>\n            <Schema schema={slot} />\n          </FormGroup>\n        </div>\n      </>\n    )\n  }\n\n  if (isConfigurationSlotType(slotSchema)) {\n    // this is a regular config slot\n    return <SlotEditor key={slotName} slot={slot} slotSchema={slotSchema} />\n  }\n\n  return null\n})\n\nconst Schema = observer(({ schema }) => {\n  return iterMap(\n    Object.entries(getMembers(schema).properties),\n    ([slotName, slotSchema]) => (\n      <Member key={slotName} {...{ slotName, slotSchema, schema }} />\n    ),\n  )\n})\n\nconst ConfigurationEditor = observer(({ model }) => {\n  const classes = useStyles()\n  // key forces a re-render, otherwise the same field can end up being used\n  // for different tracks since only the backing model changes for example\n  // see pr #804\n  const key = model.target && readConfObject(model.target, 'trackId')\n  return (\n    <div className={classes.root} key={key} data-testid=\"configEditor\">\n      {!model.target ? 'no target set' : <Schema schema={model.target} />}\n    </div>\n  )\n})\n\nexport default ConfigurationEditor\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"sourceRoot":""}