{"version":3,"sources":["../../../plugins/sequence/src/BgzipFastaAdapter/BgzipFastaAdapter.ts"],"names":["config","fastaLocation","readConfObject","faiLocation","gziLocation","Error","fastaOpts","fasta","openLocation","fai","gzi","BgzipIndexedFasta","IndexedFasta"],"mappings":"gRASE,WAAmBA,GAAyC,0BAC1D,cAAMA,GACN,IAAMC,EAAgBC,yBAAeF,EAAQ,iBACvCG,EAAcD,yBAAeF,EAAQ,eACrCI,EAAcF,yBAAeF,EAAQ,eAC3C,IAAKC,EACH,MAAM,IAAII,MAAM,8BAElB,IAAKF,EACH,MAAM,IAAIE,MAAM,4BAElB,IAAKD,EACH,MAAM,IAAIC,MAAM,4BAElB,IAAMC,EAAY,CAChBC,MAAOC,uBAAaP,GACpBQ,IAAKD,uBAAaL,GAClBO,IAAKF,uBAAaJ,IAjBsC,OAoB1D,EAAKG,MAAQ,IAAII,oBAAkBL,GApBuB,E,kBADjCM","file":"static/js/67.d6686ed4.chunk.js","sourcesContent":["import { BgzipIndexedFasta } from '@gmod/indexedfasta'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { Instance } from 'mobx-state-tree'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport IndexedFasta from '../IndexedFastaAdapter/IndexedFastaAdapter'\nimport MyConfigSchema from './configSchema'\n\nexport default class extends IndexedFasta {\n  public constructor(config: Instance<typeof MyConfigSchema>) {\n    super(config)\n    const fastaLocation = readConfObject(config, 'fastaLocation')\n    const faiLocation = readConfObject(config, 'faiLocation')\n    const gziLocation = readConfObject(config, 'gziLocation')\n    if (!fastaLocation) {\n      throw new Error('must provide fastaLocation')\n    }\n    if (!faiLocation) {\n      throw new Error('must provide faiLocation')\n    }\n    if (!gziLocation) {\n      throw new Error('must provide gziLocation')\n    }\n    const fastaOpts = {\n      fasta: openLocation(fastaLocation as FileLocation),\n      fai: openLocation(faiLocation as FileLocation),\n      gzi: openLocation(gziLocation as FileLocation),\n    }\n\n    this.fasta = new BgzipIndexedFasta(fastaOpts)\n  }\n}\n"],"sourceRoot":""}